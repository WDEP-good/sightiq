# 此配置文件部署一个包含3个FE和3个BE的StarRocks集群。

apiVersion: starrocks.com/v1
kind: StarRocksCluster
metadata:
  name: starrockscluster-sample
  namespace: starrocks
spec:
  starRocksFeSpec:
    image: docker.io/starrocks/fe-ubuntu:3.5.0
    replicas: 2
    # 如果您只是想启动一个运行中的StarRocks集群，可以设置较小的请求/限制，例如1核和2GB。
    # 有关如何在生产环境中配置CPU和内存的更多信息，请参见 https://docs.starrocks.io/docs/deployment/plan_cluster/#cpu-and-memory
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 1
      memory: 2Gi
    # storageVolumes是可选的。如果不指定，将使用emptyDir来存储FE元数据和日志，请注意
    # 写入卷的文件和目录在容器重启时将完全丢失。
    storageVolumes:
    - name: fe-meta
      # storageClassName: ""  # 如果未设置storageClassName，Kubernetes将使用默认存储类。
      # 如果FE元数据目录所在磁盘的可用空间小于5Gi，FE容器将停止运行。
      storageSize: 10Gi
      mountPath: /opt/starrocks/fe/meta
    - name: fe-log
      # storageClassName: ""  # 如果未设置storageClassName，Kubernetes将使用默认存储类。
      storageSize: 1Gi
      mountPath: /opt/starrocks/fe/log
  starRocksBeSpec:
    image: docker.io/starrocks/be-ubuntu:3.5.0
    replicas: 2
    # 如果您只是想启动一个运行中的StarRocks集群，可以设置较小的请求/限制，例如1核和2GB。
    # 有关如何在生产环境中配置CPU和内存的更多信息，请参见 https://docs.starrocks.io/docs/deployment/plan_cluster/#cpu-and-memory
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 1
      memory: 2Gi
    # storageVolumes是可选的。如果不指定，将使用emptyDir来存储BE数据和日志，请注意
    # 写入卷的文件和目录在容器重启时将完全丢失。
    storageVolumes:
    - name: be-data
      # storageClassName: ""  # 如果未设置storageClassName，Kubernetes将使用默认存储类。
      storageSize: 20Gi
      mountPath: /opt/starrocks/be/storage
    - name: be-log
      # storageClassName: ""  # 如果未设置storageClassName，Kubernetes将使用默认存储类。
      storageSize: 2Gi
      mountPath: /opt/starrocks/be/log
