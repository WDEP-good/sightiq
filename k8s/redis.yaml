apiVersion: v1
kind: Namespace
metadata:
  name: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: master
  template:
    metadata:
      labels:
        app: redis
        role: master
    spec:
      containers:
      - name: redis
        image: docker.io/library/redis:7.2.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-config
          mountPath: /usr/local/etc/redis
        command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
      volumes:
      - name: redis-config
        configMap:
          name: redis-master-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-master-config
  namespace: redis
data:
  redis.conf: |
    bind 0.0.0.0
    protected-mode no
    appendonly yes
    requirepass 123456
    user root on >123456 ~* +@all

---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-slave1
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: slave1
  template:
    metadata:
      labels:
        app: redis
        role: slave1
    spec:
      containers:
      - name: redis
        image: docker.io/library/redis:7.2.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-config
          mountPath: /usr/local/etc/redis
        command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
      volumes:
      - name: redis-config
        configMap:
          name: redis-slave1-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-slave1-config
  namespace: redis
data:
  redis.conf: |
    bind 0.0.0.0
    protected-mode no
    appendonly yes
    replicaof redis-master 6379
    masterauth 123456
    requirepass 123456
    user root on >123456 ~* +@all

---
apiVersion: v1
kind: Service
metadata:
  name: redis-slave1
  namespace: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: slave1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-slave2
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: slave2
  template:
    metadata:
      labels:
        app: redis
        role: slave2
    spec:
      containers:
      - name: redis
        image: docker.io/library/redis:7.2.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-config
          mountPath: /usr/local/etc/redis
        command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
      volumes:
      - name: redis-config
        configMap:
          name: redis-slave2-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-slave2-config
  namespace: redis
data:
  redis.conf: |
    bind 0.0.0.0
    protected-mode no
    appendonly yes
    replicaof redis-master 6379
    masterauth 123456
    requirepass 123456
    user root on >123456 ~* +@all

---
apiVersion: v1
kind: Service
metadata:
  name: redis-slave2
  namespace: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: slave2

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel1
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: sentinel1
  template:
    metadata:
      labels:
        app: redis
        role: sentinel1
    spec:
      containers:
      - name: redis
        image: docker.io/library/redis:7.2.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 26379
        volumeMounts:
        - name: redis-config
          mountPath: /usr/local/etc/redis
        command: ["redis-server", "/usr/local/etc/redis/sentinel.conf", "--sentinel"]
      volumes:
      - name: redis-config
        configMap:
          name: redis-sentinel1-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel1-config
  namespace: redis
data:
  sentinel.conf: |
    port 26379
    dir /tmp
    sentinel monitor redis-master redis-master 6379 2
    sentinel down-after-milliseconds redis-master 5000
    sentinel failover-timeout redis-master 10000
    sentinel parallel-syncs redis-master 1
    sentinel resolve-hostnames yes
    sentinel auth-pass redis-master 123456

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel1
  namespace: redis
spec:
  ports:
  - port: 26379
    targetPort: 26379
  selector:
    app: redis
    role: sentinel1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel2
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: sentinel2
  template:
    metadata:
      labels:
        app: redis
        role: sentinel2
    spec:
      containers:
      - name: redis
        image: docker.io/library/redis:7.2.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 26379
        volumeMounts:
        - name: redis-config
          mountPath: /usr/local/etc/redis
        command: ["redis-server", "/usr/local/etc/redis/sentinel.conf", "--sentinel"]
      volumes:
      - name: redis-config
        configMap:
          name: redis-sentinel2-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel2-config
  namespace: redis
data:
  sentinel.conf: |
    port 26380
    dir /tmp
    sentinel monitor redis-master redis-master 6379 2
    sentinel down-after-milliseconds redis-master 5000
    sentinel failover-timeout redis-master 10000
    sentinel resolve-hostnames yes
    sentinel auth-pass redis-master 123456

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel2
  namespace: redis
spec:
  ports:
  - port: 26380
    targetPort: 26379
  selector:
    app: redis
    role: sentinel2

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel3
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: sentinel3
  template:
    metadata:
      labels:
        app: redis
        role: sentinel3
    spec:
      containers:
      - name: redis
        image: docker.io/library/redis:7.2.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 26379
        volumeMounts:
        - name: redis-config
          mountPath: /usr/local/etc/redis
        command: ["redis-server", "/usr/local/etc/redis/sentinel.conf", "--sentinel"]
      volumes:
      - name: redis-config
        configMap:
          name: redis-sentinel3-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel3-config
  namespace: redis
data:
  sentinel.conf: |
    port 26381
    dir /tmp
    sentinel monitor redis-master redis-master 6379 2
    sentinel down-after-milliseconds redis-master 5000
    sentinel failover-timeout redis-master 10000
    sentinel parallel-syncs redis-master 1
    sentinel resolve-hostnames yes
    sentinel auth-pass redis-master 123456

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel3
  namespace: redis
spec:
  ports:
  - port: 26381
    targetPort: 26379
  selector:
    app: redis
    role: sentinel3